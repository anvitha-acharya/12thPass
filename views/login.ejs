<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container my-5">
        <h1 class="text-center mb-4">Login</h1>
        <form action="/login" method="POST" class="w-50 mx-auto">
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <div class="input-group">
                <input type="email" class="form-control" id="email" name="email" required>
                <button type="button" id="mic-email" class="btn btn-info">ðŸŽ¤</button>
                </div>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <div class="input-group">
                <input type="password" class="form-control" id="password" name="password" required>
                <button type="button" id="mic-password" class="btn btn-info">ðŸŽ¤</button>
            </div></div>
            <button type="submit" class="btn btn-primary w-100">Login</button>
        </form>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/annyang@2.6.1/dist/annyang.min.js"></script>
<script>
     // Speech Recognition (Speech-to-Text)
const micButtons = document.querySelectorAll('button[id^="mic-"]');
micButtons.forEach(button => {
    button.addEventListener('click', () => {
        const fieldId = button.id.replace('mic-', '');
        const inputField = document.getElementById(fieldId);
        
        // Ensure SpeechRecognition is available
        if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {
            alert('Speech Recognition API is not supported in your browser');
            return;
        }

        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        
        recognition.start();

        recognition.onresult = function(event) {
            const result = event.results[0][0].transcript;
            inputField.value = result;
            button.blur(); // Remove focus from the button
            navigator.vibrate(200); // Confirming sound via vibration
        };

        recognition.onerror = function(event) {
            console.error('Speech recognition failed', event);
            alert("Speech recognition failed, please try again.");
        };
    });
});

</script>
</body>
</html>

